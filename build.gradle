plugins {
    id 'java'
    id 'jacoco'
    id "org.hibernate.orm" version "6.4.4.Final"
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    //Spring Core
    // https://mvnrepository.com/artifact/org.springframework/spring-core
    implementation group: 'org.springframework', name: 'spring-core', version: '6.1.3'
    // https://mvnrepository.com/artifact/org.springframework/spring-context
    implementation group: 'org.springframework', name: 'spring-context', version: '6.1.3'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    // Database
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.2'

    //Jackson for JSON processing
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.16.1'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.16.1'

    // SLF4J API
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    testImplementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '2.0.12', ext: 'pom'
    // Logback Classic Implementation
    implementation 'ch.qos.logback:logback-classic:1.4.12'


    //Spring Testing
    testImplementation 'org.springframework:spring-test:5.3.13'

    //JUnit 5 Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'

    //Mockito for mocking in tests
    testImplementation 'org.mockito:mockito-core:3.6.28'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.6.28'
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
